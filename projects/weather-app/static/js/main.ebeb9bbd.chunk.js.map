{"version":3,"sources":["api/weaterGetter.js","components/findForm/FindForm.jsx","components/findForm/FindFormContainer.jsx","store/findForm/actions.js","store/weatherInfo/actions.js","api/elementExpander.js","components/weatherInfo/WeatherInfo.jsx","components/weatherInfo/WeatherInfoContainer.jsx","components/App.jsx","serviceWorker.js","store/findForm/reducers.js","store/weatherInfo/reducers.js","store/reducers.js","index.js"],"names":["getWeatherFromApi","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","city","url","result","response","wrap","_context","prev","next","fetch","concat","sent","status","abrupt","wrongRequest","json","parseObject","stop","_x","apply","this","arguments","res","weather","name","temp","main","wind","rain","FindForm","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setCity","bind","assertThisInitialized","setWeater","_this2","then","expand","previousCity","setExpandTo","setWrongRequest","event","setCityName","target","value","react_default","createElement","className","onSubmit","preventDefault","type","onChange","handleTextFieldOnError","onClick","hadleButtonText","React","Component","FindFormContainer","findForm_FindForm","wrongRequestAction","putActionToProps","payload","weatherObject","state","connect","findForm","weatherInfo","expandElement","el","style","height","Array","prototype","reduce","children","document","querySelector","styles","window","getComputedStyle","margin","parseFloat","getAbsoluteHeight","WeatherInfo","_this$props$weather","_this$props$weather$c","_this$props$weather$t","_this$props$weather$r","description","_this$props$weather$w","speed","aria-label","role","Math","round","toUpperCase","slice","WeatherInfoContainer","weatherInfo_WeatherInfo","App","findForm_FindFormContainer","weatherInfo_WeatherInfoContainer","Boolean","location","hostname","match","initialState","combineReducers","length","undefined","action","objectSpread","store","createStore","rootReducer","ReactDOM","render","es","components_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ebeb9bbd.chunk.js","sourcesContent":["const apiKey = \"55c50dde0c86eb96eea0c793cfb7650d\";\r\n\r\nexport const getWeatherFromApi = async city => {\r\n    let url = await fetch(\r\n        `https://api.openweathermap.org/data/2.5/weather?q=${city}&APPID=${apiKey}`\r\n    );\r\n    if (url.status === 404 || city === \"\") {\r\n        return { wrongRequest: true };\r\n    }\r\n    let result = await url.json();\r\n    let response = parseObject(result);\r\n    return response;\r\n};\r\n\r\nfunction parseObject(res) {\r\n    let obj = {\r\n        weather: {\r\n            city: res.name,\r\n            temp: res.main.temp - 273.16,\r\n            wind: res.wind,\r\n            rain: res.weather[0]\r\n        }\r\n    };\r\n    return obj;\r\n}\r\n","import React from \"react\";\nimport { getWeatherFromApi } from \"../../api/weaterGetter\";\nclass FindForm extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.setCity = this.setCity.bind(this);\n        this.setWeater = this.setWeater.bind(this);\n    }\n    setWeater() {\n        getWeatherFromApi(this.props.city).then(response => {\n            if (!this.props.expand) {\n                this.props.setExpandTo(true);\n            } else {\n                if (this.props.city === this.props.previousCity) {\n                    this.props.setExpandTo(false);\n                }\n            }\n\n            if (response.wrongRequest) {\n                this.props.setExpandTo(false);\n            }\n\n            if (!response.wrongRequest) {\n                this.props.setWeater(response);\n                this.props.setWrongRequest({ wrongRequest: false });\n            } else {\n                this.props.setWrongRequest(response);\n            }\n        });\n    }\n\n    setCity(event) {\n        this.props.setCityName(event.target.value);\n    }\n\n    hadleButtonText() {\n        return this.props.expand ? \"Hide weather\" : \"Get weather\";\n    }\n\n    handleTextFieldOnError() {\n        return this.props.wrongRequest ? \"invalid\" : \"valid\";\n    }\n    render() {\n        return (\n            <div className=\"find\">\n                <form onSubmit={event => event.preventDefault()}>\n                    <input\n                        type=\"text\"\n                        value={this.props.city}\n                        onChange={this.setCity}\n                        className={this.handleTextFieldOnError()}\n                    />\n                    <button onClick={this.setWeater}>\n                        {this.hadleButtonText()}\n                    </button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default FindForm;\n","import React from \"react\";\r\nimport FindForm from \"./FindForm\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n    setCityName,\r\n    setWeater,\r\n    wrongRequestAction\r\n} from \"../../store/findForm/actions\";\r\nimport { setExpandTo } from \"../../store/weatherInfo/actions\";\r\n\r\nclass FindFormContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <FindForm\r\n                city={this.props.city}\r\n                previousCity={this.props.previousCity}\r\n                wrongRequest={this.props.wrongRequest}\r\n                expand={this.props.expand}\r\n                setCityName={this.props.setCityName}\r\n                setWeater={this.props.setWeater}\r\n                setExpandTo={this.props.setExpandTo}\r\n                setWrongRequest={this.props.wrongRequestAction}\r\n            />\r\n        );\r\n    }\r\n}\r\nconst putStateToProps = state => {\r\n    return {\r\n        city: state.findForm.city,\r\n        wrongRequest: state.findForm.wrongRequest,\r\n        expand: state.weatherInfo.expand,\r\n        previousCity: state.findForm.weather.city\r\n    };\r\n};\r\n\r\nconst putActionToProps = {\r\n    setCityName,\r\n    setWeater,\r\n    wrongRequestAction,\r\n    setExpandTo\r\n};\r\n\r\nexport default connect(\r\n    putStateToProps,\r\n    putActionToProps\r\n)(FindFormContainer);\r\n","export const GET_WEATER_FROM_API = \"GET_WEATER_FROM_API\";\r\nexport const CHANGE_CITY_NAME = \"CHANGE_CITY_NAME\";\r\nexport const WRONG_REQUEST_ACTION = \"WRONG_REQUEST_ACTION\";\r\n\r\nexport const setWeater = weatherObject => {\r\n    return {\r\n        type: GET_WEATER_FROM_API,\r\n        payload: weatherObject\r\n    };\r\n};\r\nexport const setCityName = name => {\r\n    return {\r\n        type: CHANGE_CITY_NAME,\r\n        payload: name\r\n    };\r\n};\r\nexport const wrongRequestAction = res => {\r\n    return {\r\n        type: WRONG_REQUEST_ACTION,\r\n        payload: res\r\n    };\r\n};\r\n","export const EXPAND_STATE = \"EXPAND_STATE\";\r\n\r\nexport const setExpandTo = state => {\r\n    return {\r\n        type: EXPAND_STATE,\r\n        payload: state\r\n    };\r\n};\r\n","export function expandElement(el) {\r\n    if (el != null) {\r\n        el.style.height =\r\n            Array.prototype.reduce.call(\r\n                el.children,\r\n                (prev, next) => {\r\n                    return prev + getAbsoluteHeight(next, \"bottom\");\r\n                },\r\n                0\r\n            ) + \"px\";\r\n    }\r\n}\r\n\r\nexport function collapseElement(el) {\r\n    if (el != null) {\r\n        el.style.height = \"0px\";\r\n    }\r\n}\r\n\r\nfunction getAbsoluteHeight(el) {\r\n    el = typeof el === \"string\" ? document.querySelector(el) : el;\r\n\r\n    const styles = window.getComputedStyle(el);\r\n    const margin =\r\n        parseFloat(styles[\"marginTop\"]) + parseFloat(styles[\"marginBottom\"]);\r\n\r\n    return parseFloat(styles.height) + margin;\r\n}\r\n","import React from \"react\";\nimport { expandElement, collapseElement } from \"../../api/elementExpander\";\n\n// move to const version?\nclass WeatherInfo extends React.Component {\n    render() {\n        const {\n            city = \"Unknown\",\n            temp = \"0\",\n            rain = { description: \"No info\" },\n            wind = { speed: 0 }\n        } = this.props.weather;\n\n        this.props.expand\n            ? expandElement(document.querySelector(\".info\"))\n            : collapseElement(document.querySelector(\".info\"));\n\n        return (\n            <div className=\"info\">\n                <div className=\"location\">\n                    <span aria-label=\"loc\" role=\"img\">\n                        🌎\n                    </span>\n                    <p>Location:</p> <span>{city}</span>\n                </div>\n                <div className=\"temperature\">\n                    <span aria-label=\"temp\" role=\"img\">\n                        🌡️ &nbsp;\n                    </span>\n                    <p>Temperature :</p> <span>{Math.round(temp)}°С</span>\n                </div>\n                <div className=\"rain\">\n                    <span aria-label=\"rain\" role=\"img\">\n                        ☁️\n                    </span>\n                    <p>Rain:</p>{\" \"}\n                    <span>\n                        {rain.description &&\n                            rain.description[0].toUpperCase() +\n                                rain.description.slice(1)}\n                    </span>\n                </div>\n                <div className=\"wind\">\n                    <span aria-label=\"wind\" role=\"img\">\n                        🌬️\n                    </span>\n                    <p>Wind:</p> <span>{wind.speed} m/s</span>\n                </div>\n            </div>\n        );\n    }\n}\nexport default WeatherInfo;\n","import React from \"react\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport { connect } from \"react-redux\";\n\nclass WeatherInfoContainer extends React.Component {\n    render() {\n        return (\n            <WeatherInfo\n                weather={this.props.weather}\n                expand={this.props.expand}\n            />\n        );\n    }\n}\n\nconst putStateToProps = state => {\n    return {\n        weather: state.findForm.weather,\n        expand: state.weatherInfo.expand\n    };\n};\n\nconst putActionToProps = {};\n\nexport default connect(\n    putStateToProps,\n    putActionToProps\n)(WeatherInfoContainer);\n","import React from \"react\";\nimport \"../styles/App.css\";\nimport FindFormContainer from \"./findForm/FindFormContainer\";\nimport WeatherInfoContainer from \"./weatherInfo/WeatherInfoContainer\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"app\">\n                <h1>Weather Forecast Worldwide!</h1>\n                <FindFormContainer />\n                <WeatherInfoContainer />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n    GET_WEATER_FROM_API,\r\n    CHANGE_CITY_NAME,\r\n    WRONG_REQUEST_ACTION\r\n} from \"./actions\";\r\nconst initialState = {\r\n    city: \"Kiev\",\r\n    wrongRequest: false,\r\n    weather: {}\r\n};\r\n\r\nexport const findFormReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_CITY_NAME: {\r\n            return { ...state, city: action.payload };\r\n        }\r\n        case GET_WEATER_FROM_API: {\r\n            return {\r\n                ...state,\r\n                weather: action.payload.weather\r\n            };\r\n        }\r\n        case WRONG_REQUEST_ACTION: {\r\n            return {\r\n                ...state,\r\n                wrongRequest: action.payload.wrongRequest\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { EXPAND_STATE } from \"./actions\";\r\n\r\nconst initialState = {\r\n    expand: false\r\n};\r\n\r\nexport const weatherInfoReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case EXPAND_STATE: {\r\n            return { ...state, expand: action.payload };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { findFormReducer } from \"./findForm/reducers\";\r\nimport { weatherInfoReducer } from \"./weatherInfo/reducers\";\r\nexport default combineReducers({\r\n    findForm: findFormReducer,\r\n    weatherInfo: weatherInfoReducer\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore } from \"redux\";\nimport rootReducer from \"./store/reducers\";\nimport { Provider } from \"react-redux\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}